一  基本类型和引用类型
基本类型：1.简单的数据段：undefined Null Boolean Number  String
          2.不能给基本类型添加属性
          3.复制基本类型值时，会在变量对象上创建一个新值，然后把该值复制到为新变量分配的位置上。此后两个变量参与的任何操作都不会相互影响。
          4.在向参数传递基本类型值时，被传递的值会被复制给一个局部变量（即命名参数，或者用ECMAScripot的概念来说，就是arguments对象中的一个元素）
          5.使用typeof操作符来检测基本数据类型。
引用类型：1.多个值构成，保存在内存中，需引用访问{object  Array  Date  RegExp Function Math  基本包装类型}
         2.引用类型的值是按引用访问的.
         3.当从一个变量向另一个变量复制引用类型的值时，同样也会将存储在变量对象中的值复制一份放到为新变量分配的空间中。
           不同的是，这个值的副本实际上是一个指针，而这个指针指向存储在堆中的一个对象。
           复制操作结束后，两个变量实际上将引用同一个对象。因此，改变其中一个变量，就会影响另一个变量。
         4.在向参数传递引用类型的值时，会把这个值在内存中的地址复制给一个局部变量，因此这个局部变量的变化会反应在函数的外部。
         5.使用instanceof操作符来检测引用类型值。
二：延长作用域链
   1.try -catch语句中的catch块。
   2.with语句：引用对象，并对该对象上的属性进行操作。其作用是可以省略重复书写该对象名称，起到简化书写的作用。
    注意：  1、with代码块中，javascript引擎对变量的处理方式是：先查找是不是该对象的属性，如果是，则停止。如果不是继续查找是不是局部变量。
           2、就算在with语句中使用 var 运算符重新定义变量（该变量是with引用对象的属性），如果该属性是可写属性，那么也会给对象的属性赋值。
           3、如果你想通过with语句，对引用对象添加多个属性，并为每个属性赋值，这是不可能的！也就是说，要赋值的只能是对象已经存在并且可以写入的属性（不能是只读属性）。
           4.由于with语句的变量对象是只读的，结果url就成了函数执行环境的一部分，因而可以作为函数的值被返回
           5. 在Javascript的作用域中（作用域，想想就是函数块，每个函数都会有个函数名，就算是匿名函数也有个空函数名），那么创建作用域的时候，本层的标识符就可以寄托在这个作用域下，
              而with语句块中作用域的‘变量对象’是只读的，不能存储标识符，只能存储在其上一层，这就是延长作用域链。
           6.在Javascript中，没有块级作用域，就是说除了函数，其他的块级代码都没有自己的作用域。
             解决方法：var声明变量 2 标识符
        例子：     
             var href="1111";  
              function buildUrl(){  
                   var qs="?debug=true";       
                   with(o){  
                        href="2222";  
                        var url=href+qs;  
                   }      
                   return url;  
              }  
              var result=buildUrl();  
              alert(result);  
              alert(href);  
              
              
    https://blog.csdn.net/cuew1987/article/details/11265153
